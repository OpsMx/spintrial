apiVersion: v1
kind: ConfigMap
metadata:
  name: halconfig
data:
  config: |
    currentDeployment: default
    deploymentConfigurations:
    - name: default
      version: <spinnaker version>
      providers:
        appengine:
          enabled: false
          accounts: []
        aws:
          enabled: false
          accounts: []
          defaultKeyPairTemplate: '{{name}}-keypair'
          defaultRegions:
          - name: us-west-2
          defaults:
            iamRole: BaseIAMRole
        azure:
          enabled: false
          accounts: []
          bakeryDefaults:
            templateFile: azure-linux.json
            baseImages: []
        dcos:
          enabled: false
          accounts: []
          clusters: []
        google:
          enabled: false
          accounts: []
          bakeryDefaults:
            templateFile: gce.json
            baseImages: []
            zone: us-central1-f
            network: default
            useInternalIp: false
        kubernetes:
          enabled: true
          accounts:
          - name: < kubernetes accountName with gke kubeconfigFile >
            requiredGroupMembership: []
            providerVersion: V2
            permissions: {}
            dockerRegistries: []
            configureImagePullSecrets: true
            cacheThreads: 1
            namespaces: []
            omitNamespaces: []
            kinds: []
            omitKinds: []
            customResources: []
            cachingPolicies: []
            kubeconfigFile: /home/spinnaker/staging/.kube/config
            oauthScopes: []
            oAuthScopes: []
            liveManifestCalls: true
            onlySpinnakerManaged: false
          - name: < kubernetes accountName with devk8s kubeconfigFile>
            requiredGroupMembership: []
            providerVersion: V2
            permissions: {}
            dockerRegistries: []
            configureImagePullSecrets: true
            cacheThreads: 1
            namespaces: []
            omitNamespaces: []
            kinds: []
            omitKinds: []
            customResources: []
            cachingPolicies: []
            kubeconfigFile: /home/spinnaker/staging/.kube/devk8
            oauthScopes: []
            oAuthScopes: []
            liveManifestCalls: true
            onlySpinnakerManaged: false
          primaryAccount: < kubernetes accountName you like to use as primaryAccount >
        openstack:
          enabled: false
          accounts: []
          bakeryDefaults:
            baseImages: []
        oraclebmcs:
          enabled: false
          accounts: []
      deploymentEnvironment:
        size: SMALL
        customSizing: {}
        type: Distributed
        accountName: < kubernetes accountName you like to use as primaryAccount >
        updateVersions: true
        location: < name space where you like to deploy spinnaker services >
        consul:
          enabled: false
        vault:
          enabled: false
        gitConfig:
          upstreamUser: spinnaker
      persistentStorage:
        persistentStoreType: gcs
        azs: {}
        gcs:
          jsonPath: /home/spinnaker/staging/.gcs/gcs.json < gcs bucket json file from gcp >
          bucket: < gcs bucket name >
          rootFolder: front50
        redis: {}
        s3:
          bucket: test
          rootFolder: front50
          region: us-west-2
          endpoint: http://minio-service:9000
          accessKeyId: minio
          secretAccessKey: minio1234
        oraclebmcs: {}
      features:
        auth: false
        fiat: false
        chaos: false
        entityTags: false
        jobs: false
        managedPipelineTemplatesV2UI: true
      metricStores:
        datadog:
          enabled: false
        prometheus:
          enabled: false
          add_source_metalabels: true
        stackdriver:
          enabled: false
        period: 30
        enabled: false
      notifications:
        slack:
          enabled: false
        twilio:
          enabled: false
          baseUrl: https://api.twilio.com/
      timezone: America/Los_Angeles
      ci:
        jenkins:
          enabled: true
          masters:
          - name: < jenkins name >
            permissions: {}
            address: < jenkins server Ip or FQDN, with port number >
            username: < jenkins authentication username >
            password: < jenkins authentication user password >
            csrf: true
        travis:
          enabled: false
          masters: []
      security:
        apiSecurity:
          ssl:
            enabled: false       
        uiSecurity:
          ssl:
            enabled: false          
        authn:
          oauth2:
            enabled: false
            client: {}
            resource: {}
            userInfoMapping: {}
          saml:
            enabled: false
          ldap:
            enabled: false
            url: < ldap server IP or FQDN with ldap port number >
            userDnPattern: < user pattern with CN format >
          x509:
            enabled: false
          enabled: false
        authz:
          groupMembership:
            service: EXTERNAL
            google:
              roleProviderType: GOOGLE
            github:
              roleProviderType: GITHUB
            file:
              roleProviderType: FILE
          enabled: false
      artifacts:
        gcs:
          enabled: false
          accounts: []
        github:
          enabled: false
          accounts: 
          - name: < github accountName >
            username: < github user name to access >
            password: < github user password to access >
        http:
          enabled: false
          accounts: []
      pubsub:
        google:
          enabled: false
          subscriptions: []
      canary:
        enabled: false
        serviceIntegrations:
        - name: google
          enabled: false
          accounts: []
          gcsEnabled: false
          stackdriverEnabled: false
        - name: prometheus
          enabled: false
          accounts: []
        - name: datadog
          enabled: false
          accounts: []
        - name: aws
          enabled: false
          accounts: []
          s3Enabled: false
        reduxLoggerEnabled: true
        defaultJudge: NetflixACAJudge-v1.0
        stagesEnabled: true
        templatesEnabled: true
        showAllConfigsEnabled: true
