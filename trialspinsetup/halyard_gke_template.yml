apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: spin-halyard
  labels:
    app: spin
    stack: halyard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spin
      stack: halyard
  template:
    metadata:
      labels:
        app: spin
        stack: halyard
    spec:
      containers:
      - name: halyard-daemon
        image: < image from repository >  
        imagePullPolicy: Always
        command:
        - /bin/sh
        args:
        - -c
        - "cp -R /home/spinnaker/staging/.hal /root/.hal && cp -R /home/spinnaker/staging/.kube /root/.kube && /opt/halyard/bin/halyard"
        readinessProbe:
          exec:
            command:
            - wget
            - -q
            - --spider
            - http://localhost:8064/health
        ports:
        - containerPort: 8064
        volumeMounts:
        - name: halconfig
          mountPath: /home/spinnaker/staging/.hal/config
          subPath: config
        - name: kubeconfig
          mountPath: /home/spinnaker/staging/.kube/config
          subPath: config
        - name: devconfig
          mountPath: /home/spinnaker/staging/.kube/devk8
          subPath: devconfig
        - name: gcsconfig
          mountPath: /home/spinnaker/staging/.gcs/gcs.json
          subPath: gcs.json
      volumes:
      - name: halconfig
        configMap:
          defaultMode: 420
          name: halconfig
      - name: kubeconfig
        configMap:
          defaultMode: 420
          name: kubeconfig
      - name: devconfig
        configMap:
          defaultMode: 420
          name: devconfig
      - name: gcsconfig
        configMap:
          defaultMode: 420
          name: gcsconfig
---

apiVersion: v1
kind: Service
metadata:
  name: spin-halyard
spec:
  ports:
    - port: 8064
      targetPort: 8064
      protocol: TCP
  selector:
    app: spin
    stack: halyard
  type: ClusterIP
